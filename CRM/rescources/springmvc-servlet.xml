<?xml version="1.0" encoding="UTF-8"?>
        <beans xmlns="http://www.springframework.org/schema/beans"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
               xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
               xmlns:mvc="http://www.springframework.org/schema/mvc"
               xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        <!--扫描注解-->
                <context:component-scan base-package="com.chaqi"/>
                <mvc:annotation-driven/>
        <!--配置静态资源-->
        <mvc:default-servlet-handler/>
        <mvc:resources mapping="/css/**" location="/css/"/>
        <mvc:resources mapping="/images/**" location="/images/"/>
        <mvc:resources mapping="/js/**" location="/js/"/>


                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                        <property name="prefix" value="/WEB-INF/jsp/"/>
                        <property name="suffix" value=".jsp"/>
                </bean>

                <!--配置图片上传时的大小-->
                <bean name="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
                        <property name="maxUploadSize" value="102400000"/>
                </bean>
               <!-- c3p0连接数据库方式-->
                <context:property-placeholder location="classpath:c3p0.properties"/>
                <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
                        <property name="driverClass" value="${driver}"/>
                        <property name="jdbcUrl" value="${url}"/>
                        <property name="user" value="${user}"/>
                        <property name="password" value="${password}"/>
                        <property name="initialPoolSize" value="${initialPoolSize}"/>
                        <property name="minPoolSize" value="${minPoolSize}"/>
                        <property name="maxPoolSize" value="${maxPoolSize}"/>
                </bean>
        <!--配置数据源-->
       <!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/crmsystemjdbc"/>
                <property name="username" value="root"/>
                <property name="password" value="ROOT"/>
        </bean>-->

                <!--  2,配置sqlsessionFactory工場
                               a,连接数据库的四大组件
                               b,读取mybatis的核心配置文件
                               c,读取mapper映射文件	-->
                <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                        <property name="dataSource" ref="dataSource"/>
                        <property name="configLocation" value="classpath:mybatis-config.xml"/>
                </bean>
                <!--配置mapper映射-->
                <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                        <property name="basePackage" value="com.chaqi.mapper"/>
                        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
                </bean>
        <!--配置声明式事物-->
                <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                        <property name="dataSource" ref="dataSource"/>
                </bean>
        <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>


        <!--配置拦截器-->
        <mvc:interceptors>
                <!--  使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求   -->
                <mvc:interceptor>
                        <!-- 进行拦截：/** 表示拦截所有controller -->
                        <mvc:mapping path="/**"/>
                        <!-- 不进行拦截 -->
                        <mvc:exclude-mapping path="/login"/>
                        <mvc:exclude-mapping path="/tologin"/>
                        <bean class="com.chaqi.utils.Interceptor"></bean>
                </mvc:interceptor>
        </mvc:interceptors>
</beans>